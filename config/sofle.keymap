/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

#include <dt-bindings/led/led.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 25

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define DVORAK 1
#define LOWER 2
#define RAISE 3
#define MOUSE 4
#define ADJUST 5
#define FLOAT 6
#define LOCK 7

&pinctrl {
    spi3_default: spi3_default {
        group1 { psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>; };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

&sk {
    release-after-ms = <250>;
    quick-release;
    ignore-modifiers;
};

&lt {
    tapping-term-ms = <125>;
    flavor = "hold-preferred";
};

/* END temporary RGB support section */

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <2 3>;
            then-layer = <5>;
        };
    };

    behaviors {
        layer_hold_toggle: layer_hold_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_TOGGLE";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <125>;
            bindings = <&mo>, <&tog>;
        };

        mouse_tap_layer: mouse_tap_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "MOUSE_TAP_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 3>;
        };

        super_backspace: super_backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "SUPER_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LS(LG(BACKSPACE))>;

            tapping-term-ms = <150>;
        };

        quick_hold_tap: quick_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_HOLD_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
        };

        wacky_tap_dance: wacky_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "WACKY_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp C_MUTE>, <&kp C_PLAY_PAUSE>;

            tapping-term-ms = <125>;
        };

        wacky_layer_hold: wacky_layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "WACKY_LAYER_HOLD";
            bindings = <&mo>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            flavor = "hold-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_lock {
            bindings = <&tog 7>;
            key-positions = <53 56 33 26>;
            layers = <0 1 7>;
            timeout-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Qwerty layer";
            bindings = <
&kp ESC     &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                                 &kp N6  &kp N7         &kp N8     &kp N9     &kp N0    &kp BACKSLASH
&kp TAB     &kp Q   &kp W      &kp E     &kp R     &kp T                                  &kp Y   &kp U          &kp I      &kp O      &kp P     &kp SQT
&kp LSHIFT  &kp A   &kp S      &kp D     &kp F     &kp G                                  &kp H   &kp J          &kp K      &kp L      &kp SEMI  &kp RIGHT_SHIFT
&kp LCTRL   &kp Z   &kp X      &kp C     &kp V     &kp B   &lt 6 C_MUTE    &lt 6 F24      &kp N   &kp M          &kp COMMA  &kp DOT    &kp FSLH  &kp MINUS
                    &kp ENTER  &kp LGUI  &kp LALT  &mo 2   &kp SPACE       &kp BACKSPACE  &mo 3   &kp RIGHT_GUI  &kp RALT   &kp ENTER
            >;
        };

        colemak_layer {
        display-name = "Colemak layer";
            bindings = <
&kp ESC     &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                                 &kp N6  &kp N7         &kp N8     &kp N9     &kp N0    &kp BACKSLASH
&kp TAB     &kp Q   &kp W      &kp F     &kp P     &kp G                                  &kp J   &kp L          &kp U      &kp Y      &kp SQT   &kp SLASH
&kp LSHIFT  &kp A   &kp R      &kp S     &kp T     &kp D                                  &kp H   &kp N          &kp E      &kp I      &kp O     &kp RIGHT_SHIFT
&kp LCTRL   &kp Z   &kp X      &kp C     &kp V     &kp B   &lt 6 C_MUTE    &lt 6 F24      &kp K   &kp M          &kp COMMA  &kp DOT    &kp FSLH  &kp MINUS
                    &kp ENTER  &kp LGUI  &kp LALT  &mo 2   &kp SPACE       &kp BACKSPACE  &mo 3   &kp RIGHT_GUI  &kp RALT   &kp ENTER
            >;
        };

        lower_layer {
            display-name = "Lower layer";
            bindings = <
&kp GRAVE      &kp F1        &kp F2    &kp F3          &kp F4            &kp F5                                        &kp F6     &kp F7    &kp F8           &kp F9      &kp F10          &kp F11
&kp LA(SPACE)  &msc SCRL_UP  &kp UP    &msc SCRL_DOWN  &kp DELETE        &kp LC(LS(L))                                 &kp N6     &kp N7    &kp N8           &kp N9      &kp PRINTSCREEN  &kp F12
&trans         &kp LEFT      &kp DOWN  &kp RIGHT       &mkp MB4          &mkp MB5                                      &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR    &kp RPAR         &trans
&trans         &trans        &trans    &kp Y           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &sys_reset    &bootloader  &kp LBKT   &kp RBKT  &kp SEMI         &kp INSERT  &kp BSLH         &trans
                             &trans    &trans          &trans            &trans             &caps_word    &trans       &trans     &trans    &trans           &trans
            >;
        };

        raise_layer {
            display-name = "Raise layer";
            bindings = <
&trans  &trans      &trans     &trans       &trans       &trans                             &kp MINUS         &kp PLUS           &kp BACKSLASH         &kp EXCL               &kp EQUAL  &kp BACKSLASH
&trans  &kp INS     &kp PSCRN  &kp K_CMENU  &trans       &trans                             &kp HOME          &kp END            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS  &kp PLUS
&trans  &mkp MB5    &kp LCTRL  &mkp MB4     &trans       &trans                             &kp LC(LEFT)      &kp LC(RIGHT)      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS  &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans  &bootloader    &sys_reset  &kp LC(LS(LEFT))  &kp LC(LS(RIGHT))  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LC(A)  &tog 4
                    &trans     &trans       &trans       &trans  &trans         &trans      &trans            &trans             &trans                &kp LG(L)
            >;
        };

        Mouse_Layer {
            display-name = "Mouse layer";
            bindings = <
&trans  &trans          &trans          &trans           &trans  &trans                    &trans  &trans     &trans        &trans          &trans  &trans
&trans  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans  &trans                    &trans  &trans     &msc SCRL_UP  &msc SCRL_DOWN  &trans  &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans                    &trans  &mkp LCLK  &mkp MCLK     &mkp RCLK       &trans  &trans
&trans  &trans          &trans          &trans           &trans  &trans  &trans    &trans  &trans  &trans     &trans        &trans          &trans  &trans
                        &trans          &trans           &trans  &trans  &trans    &trans  &trans  &trans     &trans        &trans
            >;
        };

        adjust_layer {
            display-name = "Adjust layer";
            bindings = <
&trans             &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &to 0            &to 1            &none            &none                             &none  &studio_unlock
&ext_power EP_OFF  &trans        &none         &none         &none         &none                            &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_HUD  &rgb_ug RGB_COLOR_HSB(190,84,43)  &none  &none
&none              &none         &none         &none         &none         &out OUT_TOG                     &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_HUI  &rgb_ug RGB_COLOR_HSB(24,100,50)  &none  &none
&bt BT_CLR         &none         &none         &none         &none         &rgb_ug RGB_TOG  &none    &none  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none            &none                             &none  &none
                                 &none         &none         &none         &none            &none    &none  &none            &none            &none            &none
            >;
        };

        float_layer {
            display-name = "Float layer";
            bindings = <
&trans  &trans                  &trans             &trans          &trans             &trans                             &kp KP_ENTER     &kp BACKSPACE    &kp SLASH        &kp ASTERISK     &kp MINUS    &trans
&trans  &kp LC(LG(LEFT_ARROW))  &kp LG(LC(RIGHT))  &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_NEXT                         &kp KP_NUMBER_0  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS  &trans
&trans  &kp Y                   &kp BSLH           &kp C_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                    &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DOT   &trans
&trans  &kp Z                   &trans             &trans          &trans             &trans           &trans    &trans  &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans       &trans
                                &trans             &trans          &trans             &trans           &trans    &trans  &trans           &trans           &trans           &trans
            >;
        };

        lock_layer {
            display-name = "Lock layer";
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none    &none  &none  &none  &none  &none
            >;
        };
    };
};
